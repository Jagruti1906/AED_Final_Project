/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI_Medical_Department;

import Medical_Department.DoctorDirectory;
import Medical_Department.HospitalAdminClass;
import static aed_project.AED_Project.hospAdmin;
import UI.Login;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jagru
 */
public class HospAdminMainFrame extends javax.swing.JFrame {

    /**
     * Creates new form HospAdminMainFrame
     */
    public HospAdminMainFrame() {
        initComponents();
    }
    
    public void getHospAdmin(HospitalAdminClass hosp) {
        System.out.println(hosp.getName());
        hospAdmin = hosp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        appointmentList = new javax.swing.JButton();
        viewProfile = new javax.swing.JButton();
        doctorRecord = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        appointmentList.setText("Appointment History");
        appointmentList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentListActionPerformed(evt);
            }
        });

        viewProfile.setText("View Profile");

        doctorRecord.setText("Doctor Record");
        doctorRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorRecordActionPerformed(evt);
            }
        });

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jLabel.setText("Welcome");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        jButton1.setText("Ambulance List");

        jButton2.setText("Patient Record");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(309, 309, 309)
                .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logout)
                    .addComponent(doctorRecord)
                    .addComponent(viewProfile)
                    .addComponent(appointmentList)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(appointmentList)
                        .addGap(18, 18, 18)
                        .addComponent(viewProfile)
                        .addGap(12, 12, 12)
                        .addComponent(doctorRecord)
                        .addGap(12, 12, 12)
                        .addComponent(jButton2)
                        .addGap(10, 10, 10)
                        .addComponent(logout))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void appointmentListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentListActionPerformed
        // TODO add your handling code here:
        String[] columnNames = {"ID","Name", "Hospital Name", "Community", "City"};
        //        AppointmentDetailsDirectory.getInstance().getCount(, "Doctor");
        //        String[][] rows = new String[appointmentDir.getCount(WIDTH, "Doctor")][5];
        //        int i=0;
        //        for (int j=0;j<) {
            //            int id = set.getValue().getDoctorID();
            //            rows[i][0] = Integer.toString(id);
            //            rows[i][1] = set.getValue().getName();
            //            rows[i][2] = set.getValue().getHospitalName();
            //            rows[i][3] = set.getValue().getCommunityName();
            //            rows[i][4] = set.getValue().getCity();
            //            i++;
            //        }
        //        DefaultTableModel model = new DefaultTableModel (rows, columnNames);
        //        view.jTable1.setModel(model);
    }//GEN-LAST:event_appointmentListActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        this.hide();
        Login login = new Login();
        login.show();
    }//GEN-LAST:event_logoutActionPerformed

    private void doctorRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorRecordActionPerformed
        // TODO add your handling code here:
        String[] columnNames = {"ID","Name", "Gender", "Specialist", "Email ID"};
        int count=0;
        for(int i=0;i<DoctorDirectory.getInstance().getDoctorDir().size();i++) {
            if(DoctorDirectory.getInstance().getDoctorDir().get(i).getHospitalName().equals(hospAdmin.getHospitalName())) {
                count++;
            }
        }
        String[][] rows = new String[count][5];
        int j=0;
        for(int i=0;i<DoctorDirectory.getInstance().getDoctorDir().size();i++) {
            if(DoctorDirectory.getInstance().getDoctorDir().get(i).getHospitalName().equals(hospAdmin.getHospitalName())) {
                int id = DoctorDirectory.getInstance().getDoctorDir().get(i).getdoctorId();
                rows[j][0] = Integer.toString(id);
                rows[j][1] = DoctorDirectory.getInstance().getDoctorDir().get(i).getName();
                rows[j][2] = DoctorDirectory.getInstance().getDoctorDir().get(i).getGender();
                rows[j][3] = DoctorDirectory.getInstance().getDoctorDir().get(i).getSpecialisation();
                rows[j][4] = DoctorDirectory.getInstance().getDoctorDir().get(i).getEmail();
                j++;
            }
        }
        DefaultTableModel model = new DefaultTableModel (rows, columnNames);
        table.setModel(model);
    }//GEN-LAST:event_doctorRecordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HospAdminMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HospAdminMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HospAdminMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HospAdminMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HospAdminMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton appointmentList;
    private javax.swing.JButton doctorRecord;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout;
    private javax.swing.JTable table;
    private javax.swing.JButton viewProfile;
    // End of variables declaration//GEN-END:variables
}
